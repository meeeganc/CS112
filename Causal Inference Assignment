

library(Matching)

##### QUESTION 2 #####

foo <- read.csv("https://course-resources.minerva.kgi.edu/uploaded_files/mke/00086677-3767/peace.csv")
foo.original <- read.csv("https://course-resources.minerva.kgi.edu/uploaded_files/mke/00086677-3767/peace.csv")


foo <- foo[, c(6:8, 11:16, 99, 50, 114, 49, 63, 136, 109, 126, 48, 160, 142, 10)]
foo <- foo[c(-19, -47), ]
which(is.na(foo) == TRUE)
head(foo)

#without interaction term

glm1 <- glm(pbs2s3 ~ wartype + logcost + wardur + factnum + factnum2 + 
              trnsfcap + develop + exp + decade + treaty + untype4, 
            data = foo, family = binomial)

summary(glm1)

#with interaction terms

glm2<- glm(pbs2s3 ~ wartype + logcost + wardur + factnum + factnum2 + 
                    trnsfcap + develop + exp + decade + treaty + untype4 + wardur:logcost
             + exp:untype4, data = foo, family = binomial)

summary(glm2)


# Predictors at their means
mean.wartype <- mean(foo$wartype)
mean.logcost <- mean(foo$logcost)
mean.factnum <- mean(foo$factnum)
mean.factnum2 <- mean(foo$factnum2)
mean.trnsfcap <- mean(foo$trnsfcap)
mean.develop <- mean(foo$develop)
mean.exp <- mean(foo$exp)
mean.decade <- mean(foo$decade)
mean.treaty <- mean(foo$treaty)


# Logit auxiliary function
get_logit <- function(X, coef) {
  logit <- coef[1] + sum(coef[2:length(coef)]*X)
  return(exp(logit) / (1 + exp(logit)))
}

#For glm1

storage.original.treat <- rep(NA, 315)
storage.original.control <- rep(NA, 315)


for (wardur in 1:315) {
  
  X.treat <- c(mean.wartype, mean.logcost, wardur, mean.factnum, mean.factnum2, 
               mean.trnsfcap, mean.develop, mean.exp, mean.decade, mean.treaty, 1)
  X.control <- c(mean.wartype, mean.logcost, wardur, mean.factnum, mean.factnum2, 
                 mean.trnsfcap, mean.develop, mean.exp, mean.decade, mean.treaty, 0)
  
  storage.original.treat[wardur]  <- get_logit(X.treat, coef(glm1))
  storage.original.control[wardur]  <- get_logit(X.control, coef(glm1))
}

coef(glm1)

# Marginal treatment effect is y_treat - y_control
original_y <- storage.original.treat - storage.original.control


# Same process-- glm2

storage.glm2.treat <- rep(NA, 315)
storage.glm2.control <- rep(NA, 315)
for (wardur in 1:315) {
  X.treat2 <- c(mean.wartype, mean.logcost, wardur, mean.factnum, mean.factnum2,
               mean.trnsfcap, mean.develop, mean.exp, mean.decade, mean.treaty, 1, mean.logcost*wardur,
               mean.exp*1)
  X.control2 <- c(mean.wartype, mean.logcost, wardur, mean.factnum, mean.factnum2,
                 mean.trnsfcap, mean.develop, mean.exp, mean.decade, mean.treaty, 0, mean.logcost*wardur,
                 mean.exp*0)
  
  storage.glm2.treat[wardur]  <- get_logit(X.treat2, coef(glm2))
  storage.glm2.control[wardur]  <- get_logit(X.control2, coef(glm2))
}

interaction_y <- storage.glm2.treat - storage.glm2.control

plot(1:315, original_y, type = "l", ylim = c(0, 0.8), 
     xlab = "Duration of war in months", ylab = "Marginal effects of UN peacekeeping operations", 
     main = "Causal Effect of Multidimensional UN Peacekeeping Operations")
lines(1:315, interaction_y, col = "red", ylim = c(0, 0.8))



##### QUESTION 3 #####

foo <- read.csv("https://course-resources.minerva.kgi.edu/uploaded_files/mke/00086677-3767/peace.csv")

# remove rows with missing data 
foo <- foo[c(-19, -47), ]
foo <- foo[, c(34, 35, 52, 6:8, 11:16, 99, 50, 108, 114, 49, 63, 124:127, 136, 109, 126, 48, 160, 142, 10)]

#removing NA
foo <- foo[complete.cases(foo), ]
which(is.na(foo) == TRUE)

Tr <- rep(0, length(foo$uncint))
Tr[which(foo$uncint != "None")] <- 1
foo$Tr <- Tr
foo$uncint

##### QUESTION 4 #####

### LOGISTIC REGRESSION ###

library(MASS)
library(Matching)

#MatchBalance function to determine if pre-matching balance
mb.pre2 <- MatchBalance(Tr ~ wartype + logcost + wardur + factnum + factnum2 +
                      trnsfcap + develop + exp + decade + treaty, 
                    data = foo, nboots = 500)

#using logistic regression to find the log odds of being assigned the treatment, 
#given the variables below

glm.2years <- glm(pbs2l ~ wartype + logcost + wardur + factnum + factnum2 + 
                    trnsfcap + develop + exp + decade + treaty + Tr, 
                  data = foo, family = binomial)

summary(glm.2years)

#Balance

NAs <- is.na(foo$pbs5l) 
mb.pre5 <- MatchBalance(Tr ~ wartype + logcost + wardur + factnum + factnum2 + trnsfcap + 
               untype4 + treaty + develop + exp + decade, data=foo[-NAs,], nboots = 500)

#logreg 5years
glm.5years <- glm(pbs5l ~ wartype + logcost + wardur + factnum + factnum2 + 
                    trnsfcap + develop + exp + decade + treaty + Tr, 
                  data = foo, family = binomial)

summary(glm.5years)

foo.counter_factual <- foo
foo.counter_factual$Tr <- rep(1, nrow(foo)) - foo$Tr
counter.factuals <- predict(glm.2years, newdata=foo.counter_factual, type="response")
unit_treat_effects <- rep(NA, nrow(foo))

mask <- foo$Tr == 1
unit_treat_effects[mask] <- glm.2years$fitted.values[mask] - counter.factuals[mask]
unit_treat_effects[!mask] <- counter.factuals[!mask] - glm.2years$fitted.values[!mask]
mean(unit_treat_effects)

install.packages("plotrix")
library(plotrix)
std.error(unit_treat_effects)

# Five years
foo.counter_factual <- foo[!NAs,]
foo.counter_factual$Tr <- 1 - foo$Tr[!NAs]
counter.factuals <- predict(glm.5years, newdata=foo.counter_factual, type="response")
unit_treat_effects <- rep(NA, nrow(foo[!NAs,]))

mask <- foo[!NAs,]$Tr == 1
unit_treat_effects[mask] <- glm.5years$fitted.values[mask] - counter.factuals[mask]
unit_treat_effects[!mask] <- counter.factuals[!mask] - glm.5years$fitted.values[!mask]
mean(unit_treat_effects)

std.error(unit_treat_effects)

#### PROPENSITY SCORE MATCHING #####

glm.prop <- glm(Tr ~ wartype + logcost + wardur + factnum + factnum2 + 
              trnsfcap + develop + exp + decade + treaty, data = foo, family = binomial)
summary(glm.prop)

X <- glm.prop$fitted.values
Y1 <- foo$pbs2l
Y2 <- foo$pbs5l
match.2years  <- Match(Y=Y1, Tr=Tr, X=X, M=1, BiasAdjust = T)
summary(match.2years)
match.2years$est.noadj
mb.2years <- MatchBalance(Tr ~ wartype + logcost + wardur + factnum + factnum2 + 
                      trnsfcap + develop + exp + decade + treaty, data = foo, 
                    match.out = match.2years, nboots=500)

mask <- which(!is.na(Y2))
match.5years  <- Match(Y=Y2[mask], Tr=Tr[mask], X=X[mask], M=1, BiasAdjust = T)
summary(match.5years)
match.5years$est.noadj
mb.5years <- MatchBalance(Tr ~ wartype + logcost + wardur + factnum + factnum2 + 
                      trnsfcap + develop + exp + decade + treaty, data = foo, 
                    match.out = match.5years, nboots=500)

### GENETIC MATCHING ####

attach(foo)
X = cbind(wartype, logcost, wardur, factnum, 
          factnum2, trnsfcap, develop, exp, decade, treaty)

detach(foo)

genout <- GenMatch(Tr=Tr, X=X, M=1,
                        pop.size=500, max.generations= 30, wait.generations = 40)
mout.2years  <- Match(Y=Y1, Tr=Tr, X=X, M=1, Weight.matrix = genout)
summary(mout.2years)
mout.2years$est.noadj
mb.2years.gen <- MatchBalance(Tr ~ wartype + logcost + wardur + factnum + factnum2 + 
                                trnsfcap + develop + exp + decade + treaty, data = foo, 
                              match.out = mout.2years, nboots=500)

genout1 <- GenMatch(Tr=Tr, X=X, M=1,
                         pop.size=500, max.generations=30, wait.generations = 40)

match.5years.gen  <- Match(Y=Y2, Tr=Tr, X=X, M=1, BiasAdjust = T, Weight.matrix = genout1)
summary(match.5years.gen)
match.5years.gen$est.noadj
mb.5years.gen <- MatchBalance(Tr ~ wartype + logcost + wardur + factnum + factnum2 + 
                                trnsfcap + develop + exp + decade + treaty, data = foo, 
                              match.out = match.5years.gen, nboots=500)

### GENETIC MATCHING WITH PROPENSITY SCORES ###

attach(foo)
X = cbind(glm.prop$fitted.values, wartype, logcost, foo$wardur, factnum, 
          factnum2, trnsfcap, develop, exp, decade, treaty)
detach(foo)

genout.prop <- GenMatch(Tr=Tr, X=X, pop.size=500, max.generations=30, wait.generations = 40)
match.2years.gen  <- Match(Y=Y1, Tr=Tr, X=X, BiasAdjust = T, Weight.matrix = genout.prop)
summary(match.2years.gen)
match.2years.gen$est.noadj
mb.2years.gen <- MatchBalance(Tr ~ wartype + logcost + wardur + factnum + factnum2 + 
                                trnsfcap + develop + exp + decade + treaty, data = foo, 
                              match.out = match.2years.gen, nboots=500)

genout1.prop <- GenMatch(Tr=Tr, X=X, pop.size=500, max.generations=30, wait.generations = 40)
match.5years.gen  <- Match(Y=Y2, Tr=Tr, X=X, BiasAdjust = T, Weight.matrix = genout1.prop)
summary(match.5years.gen)
match.5years.gen$est.noadj
mb.5years.gen <- MatchBalance(Tr ~ wartype + logcost + wardur + factnum + factnum2 + 
                                trnsfcap + develop + exp + decade + treaty, data = foo, 
                              match.out = match.5years.gen, nboots=500)


### variations to improve balance ###
### PAST VARIATION ####
### LOWER BALANCE ###

### (PREVIOUS) Genetic Matching With Propensity Scores ####

attach(foo)
X = cbind(glm.prop$fitted.values, wartype, logcost, foo$wardur, factnum, 
          factnum2, trnsfcap, develop, exp, decade, treaty)
detach(foo)

genout.prop <- GenMatch(Tr=Tr, X=X, M=1,
                        pop.size=200, max.generations=10, wait.generations=25)
match.2years.gen  <- Match(Y=Y1, Tr=Tr, X=X, M=1, BiasAdjust = T, Weight.matrix = genout.prop)
summary(match.2years.gen)
match.2years.gen$est.noadj
mb.2years.gen <- MatchBalance(Tr ~ wartype + logcost + wardur + factnum + factnum2 + 
                                trnsfcap + develop + exp + decade + treaty, data = foo, 
                              match.out = match.2years.gen, nboots=500)

genout1.prop <- GenMatch(Tr=Tr[mask], X=X[mask,], M=1,
                         pop.size=200, max.generations=10, wait.generations=25)
match.5years.gen  <- Match(Y=Y2[mask], Tr=Tr[mask], X=X[mask,], M=1, BiasAdjust = T, Weight.matrix = genout1.prop)
summary(match.5years.gen)
match.5years.gen$est.noadj
mb.5years.gen <- MatchBalance(Tr ~ wartype + logcost + wardur + factnum + factnum2 + 
                                trnsfcap + develop + exp + decade + treaty, data = foo, 
                              match.out = match.5years.gen, nboots=500)

### (PREVIOUS) Genetic Matching ###

attach(foo)
X = cbind(wartype, logcost, wardur, factnum, factnum2, 
          trnsfcap, develop, exp, decade, treaty)
detach(foo)

genout <- GenMatch(Tr = Tr, X = X, M = 1,
                   pop.size = 200, max.generations = 10, wait.generations = 25)

mout <- Match <- Match(Y = Y1, Tr = Tr, X = X, M = 1, BiasAdjust = T, Weight.matrix = genout)
summary(mout)
mout$est.noadj
mb <- MatchBalance(Tr ~ wartype + logcost + wardur + factnum + factnum2 + 
                     trnsfcap + develop + exp + decade + treaty, data = foo, 
                   match.out = mout, nboots=500)

genout.2 <- GenMatch(Tr = Tr, X = X, M = 1,
                     pop.size = 200, max.generations = 10, wait.generations = 25)
mout.2 <- Match(Y=Y2[mask], Tr=Tr[mask], X=X[mask,], M=1, BiasAdjust = T, Weight.matrix = genout.2)
summary(mout.2)
mout.2$est.noadj
mb.2 <- MatchBalance(Tr ~ wartype + logcost + wardur + factnum + factnum2 + 
                       trnsfcap + develop + exp + decade + treaty, data = foo, 
                     match.out = mout.2, nboots=500)
